// Code generated by go-swagger; DO NOT EDIT.

package v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ory/hydra/internal/httpclient/client/v1"
	"github.com/ory/hydra/internal/httpclient/models"
)

// AdminAcceptOAuth2LogoutRequestReader is a Reader for the AdminAcceptOAuth2LogoutRequest structure.
type AdminAcceptOAuth2LogoutRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AdminAcceptOAuth2LogoutRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAdminAcceptOAuth2LogoutRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAdminAcceptOAuth2LogoutRequestDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAdminAcceptOAuth2LogoutRequestOK creates a AdminAcceptOAuth2LogoutRequestOK with default headers values
func NewAdminAcceptOAuth2LogoutRequestOK() *AdminAcceptOAuth2LogoutRequestOK {
	return &AdminAcceptOAuth2LogoutRequestOK{}
}

/* AdminAcceptOAuth2LogoutRequestOK describes a response with status code 200, with default header values.

successfulOAuth2RequestResponse
*/
type AdminAcceptOAuth2LogoutRequestOK struct {
	Payload *models.SuccessfulOAuth2RequestResponse
}

func (o *AdminAcceptOAuth2LogoutRequestOK) Error() string {
	return fmt.Sprintf("[PUT /oauth2/auth/requests/logout/accept][%d] adminAcceptOAuth2LogoutRequestOK  %+v", 200, o.Payload)
}
func (o *AdminAcceptOAuth2LogoutRequestOK) GetPayload() *models.SuccessfulOAuth2RequestResponse {
	return o.Payload
}

func (o *AdminAcceptOAuth2LogoutRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessfulOAuth2RequestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminAcceptOAuth2LogoutRequestDefault creates a AdminAcceptOAuth2LogoutRequestDefault with default headers values
func NewAdminAcceptOAuth2LogoutRequestDefault(code int) *AdminAcceptOAuth2LogoutRequestDefault {
	return &AdminAcceptOAuth2LogoutRequestDefault{
		_statusCode: code,
	}
}

/* AdminAcceptOAuth2LogoutRequestDefault describes a response with status code -1, with default header values.

oAuth2ApiError
*/
type AdminAcceptOAuth2LogoutRequestDefault struct {
	_statusCode int

	Payload *models.OAuth2APIError
}

// Code gets the status code for the admin accept o auth2 logout request default response
func (o *AdminAcceptOAuth2LogoutRequestDefault) Code() int {
	return o._statusCode
}

func (o *AdminAcceptOAuth2LogoutRequestDefault) Error() string {
	return fmt.Sprintf("[PUT /oauth2/auth/requests/logout/accept][%d] adminAcceptOAuth2LogoutRequest default  %+v", o._statusCode, o.Payload)
}
func (o *AdminAcceptOAuth2LogoutRequestDefault) GetPayload() *models.OAuth2APIError {
	return o.Payload
}

func (o *AdminAcceptOAuth2LogoutRequestDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OAuth2APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
