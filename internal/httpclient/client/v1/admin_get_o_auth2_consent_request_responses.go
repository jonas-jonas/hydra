// Code generated by go-swagger; DO NOT EDIT.

package v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ory/hydra/internal/httpclient/client/v1"
	"github.com/ory/hydra/internal/httpclient/models"
)

// AdminGetOAuth2ConsentRequestReader is a Reader for the AdminGetOAuth2ConsentRequest structure.
type AdminGetOAuth2ConsentRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AdminGetOAuth2ConsentRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAdminGetOAuth2ConsentRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 410:
		result := NewAdminGetOAuth2ConsentRequestGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAdminGetOAuth2ConsentRequestDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAdminGetOAuth2ConsentRequestOK creates a AdminGetOAuth2ConsentRequestOK with default headers values
func NewAdminGetOAuth2ConsentRequestOK() *AdminGetOAuth2ConsentRequestOK {
	return &AdminGetOAuth2ConsentRequestOK{}
}

/* AdminGetOAuth2ConsentRequestOK describes a response with status code 200, with default header values.

oAuth2ConsentRequest
*/
type AdminGetOAuth2ConsentRequestOK struct {
	Payload *models.OAuth2ConsentRequest
}

func (o *AdminGetOAuth2ConsentRequestOK) Error() string {
	return fmt.Sprintf("[GET /oauth2/auth/requests/consent][%d] adminGetOAuth2ConsentRequestOK  %+v", 200, o.Payload)
}
func (o *AdminGetOAuth2ConsentRequestOK) GetPayload() *models.OAuth2ConsentRequest {
	return o.Payload
}

func (o *AdminGetOAuth2ConsentRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OAuth2ConsentRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminGetOAuth2ConsentRequestGone creates a AdminGetOAuth2ConsentRequestGone with default headers values
func NewAdminGetOAuth2ConsentRequestGone() *AdminGetOAuth2ConsentRequestGone {
	return &AdminGetOAuth2ConsentRequestGone{}
}

/* AdminGetOAuth2ConsentRequestGone describes a response with status code 410, with default header values.

handledOAuth2ConsentRequest
*/
type AdminGetOAuth2ConsentRequestGone struct {
	Payload *models.HandledOAuth2ConsentRequest
}

func (o *AdminGetOAuth2ConsentRequestGone) Error() string {
	return fmt.Sprintf("[GET /oauth2/auth/requests/consent][%d] adminGetOAuth2ConsentRequestGone  %+v", 410, o.Payload)
}
func (o *AdminGetOAuth2ConsentRequestGone) GetPayload() *models.HandledOAuth2ConsentRequest {
	return o.Payload
}

func (o *AdminGetOAuth2ConsentRequestGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HandledOAuth2ConsentRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminGetOAuth2ConsentRequestDefault creates a AdminGetOAuth2ConsentRequestDefault with default headers values
func NewAdminGetOAuth2ConsentRequestDefault(code int) *AdminGetOAuth2ConsentRequestDefault {
	return &AdminGetOAuth2ConsentRequestDefault{
		_statusCode: code,
	}
}

/* AdminGetOAuth2ConsentRequestDefault describes a response with status code -1, with default header values.

oAuth2ApiError
*/
type AdminGetOAuth2ConsentRequestDefault struct {
	_statusCode int

	Payload *models.OAuth2APIError
}

// Code gets the status code for the admin get o auth2 consent request default response
func (o *AdminGetOAuth2ConsentRequestDefault) Code() int {
	return o._statusCode
}

func (o *AdminGetOAuth2ConsentRequestDefault) Error() string {
	return fmt.Sprintf("[GET /oauth2/auth/requests/consent][%d] adminGetOAuth2ConsentRequest default  %+v", o._statusCode, o.Payload)
}
func (o *AdminGetOAuth2ConsentRequestDefault) GetPayload() *models.OAuth2APIError {
	return o.Payload
}

func (o *AdminGetOAuth2ConsentRequestDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OAuth2APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
