// Code generated by go-swagger; DO NOT EDIT.

package v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/ory/hydra/internal/httpclient/client/v1"
)

// NewAdminListOAuth2SubjectConsentSessionsParams creates a new AdminListOAuth2SubjectConsentSessionsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAdminListOAuth2SubjectConsentSessionsParams() *AdminListOAuth2SubjectConsentSessionsParams {
	return &AdminListOAuth2SubjectConsentSessionsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAdminListOAuth2SubjectConsentSessionsParamsWithTimeout creates a new AdminListOAuth2SubjectConsentSessionsParams object
// with the ability to set a timeout on a request.
func NewAdminListOAuth2SubjectConsentSessionsParamsWithTimeout(timeout time.Duration) *AdminListOAuth2SubjectConsentSessionsParams {
	return &AdminListOAuth2SubjectConsentSessionsParams{
		timeout: timeout,
	}
}

// NewAdminListOAuth2SubjectConsentSessionsParamsWithContext creates a new AdminListOAuth2SubjectConsentSessionsParams object
// with the ability to set a context for a request.
func NewAdminListOAuth2SubjectConsentSessionsParamsWithContext(ctx context.Context) *AdminListOAuth2SubjectConsentSessionsParams {
	return &AdminListOAuth2SubjectConsentSessionsParams{
		Context: ctx,
	}
}

// NewAdminListOAuth2SubjectConsentSessionsParamsWithHTTPClient creates a new AdminListOAuth2SubjectConsentSessionsParams object
// with the ability to set a custom HTTPClient for a request.
func NewAdminListOAuth2SubjectConsentSessionsParamsWithHTTPClient(client *http.Client) *AdminListOAuth2SubjectConsentSessionsParams {
	return &AdminListOAuth2SubjectConsentSessionsParams{
		HTTPClient: client,
	}
}

/* AdminListOAuth2SubjectConsentSessionsParams contains all the parameters to send to the API endpoint
   for the admin list o auth2 subject consent sessions operation.

   Typically these are written to a http.Request.
*/
type AdminListOAuth2SubjectConsentSessionsParams struct {

	/* Link.

	     The link header contains pagination links.

	For details on pagination please head over to the [pagination documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).
	*/
	Link *string

	/* Subject.

	   The subject to list the consent sessions for.
	*/
	Subject string

	/* XTotalCount.

	   The total number of clients.
	*/
	XTotalCount *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the admin list o auth2 subject consent sessions params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AdminListOAuth2SubjectConsentSessionsParams) WithDefaults() *AdminListOAuth2SubjectConsentSessionsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the admin list o auth2 subject consent sessions params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AdminListOAuth2SubjectConsentSessionsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the admin list o auth2 subject consent sessions params
func (o *AdminListOAuth2SubjectConsentSessionsParams) WithTimeout(timeout time.Duration) *AdminListOAuth2SubjectConsentSessionsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the admin list o auth2 subject consent sessions params
func (o *AdminListOAuth2SubjectConsentSessionsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the admin list o auth2 subject consent sessions params
func (o *AdminListOAuth2SubjectConsentSessionsParams) WithContext(ctx context.Context) *AdminListOAuth2SubjectConsentSessionsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the admin list o auth2 subject consent sessions params
func (o *AdminListOAuth2SubjectConsentSessionsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the admin list o auth2 subject consent sessions params
func (o *AdminListOAuth2SubjectConsentSessionsParams) WithHTTPClient(client *http.Client) *AdminListOAuth2SubjectConsentSessionsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the admin list o auth2 subject consent sessions params
func (o *AdminListOAuth2SubjectConsentSessionsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLink adds the link to the admin list o auth2 subject consent sessions params
func (o *AdminListOAuth2SubjectConsentSessionsParams) WithLink(link *string) *AdminListOAuth2SubjectConsentSessionsParams {
	o.SetLink(link)
	return o
}

// SetLink adds the link to the admin list o auth2 subject consent sessions params
func (o *AdminListOAuth2SubjectConsentSessionsParams) SetLink(link *string) {
	o.Link = link
}

// WithSubject adds the subject to the admin list o auth2 subject consent sessions params
func (o *AdminListOAuth2SubjectConsentSessionsParams) WithSubject(subject string) *AdminListOAuth2SubjectConsentSessionsParams {
	o.SetSubject(subject)
	return o
}

// SetSubject adds the subject to the admin list o auth2 subject consent sessions params
func (o *AdminListOAuth2SubjectConsentSessionsParams) SetSubject(subject string) {
	o.Subject = subject
}

// WithXTotalCount adds the xTotalCount to the admin list o auth2 subject consent sessions params
func (o *AdminListOAuth2SubjectConsentSessionsParams) WithXTotalCount(xTotalCount *string) *AdminListOAuth2SubjectConsentSessionsParams {
	o.SetXTotalCount(xTotalCount)
	return o
}

// SetXTotalCount adds the xTotalCount to the admin list o auth2 subject consent sessions params
func (o *AdminListOAuth2SubjectConsentSessionsParams) SetXTotalCount(xTotalCount *string) {
	o.XTotalCount = xTotalCount
}

// WriteToRequest writes these params to a swagger request
func (o *AdminListOAuth2SubjectConsentSessionsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Link != nil {

		// header param link
		if err := r.SetHeaderParam("link", *o.Link); err != nil {
			return err
		}
	}

	// query param subject
	qrSubject := o.Subject
	qSubject := qrSubject
	if qSubject != "" {

		if err := r.SetQueryParam("subject", qSubject); err != nil {
			return err
		}
	}

	if o.XTotalCount != nil {

		// header param x-total-count
		if err := r.SetHeaderParam("x-total-count", *o.XTotalCount); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
