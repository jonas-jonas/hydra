// Code generated by go-swagger; DO NOT EDIT.

package v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ory/hydra/internal/httpclient/client/v1"
)

// PerformOidcFrontOrBackChannelLogoutReader is a Reader for the PerformOidcFrontOrBackChannelLogout structure.
type PerformOidcFrontOrBackChannelLogoutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PerformOidcFrontOrBackChannelLogoutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 302:
		result := NewPerformOidcFrontOrBackChannelLogoutFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPerformOidcFrontOrBackChannelLogoutFound creates a PerformOidcFrontOrBackChannelLogoutFound with default headers values
func NewPerformOidcFrontOrBackChannelLogoutFound() *PerformOidcFrontOrBackChannelLogoutFound {
	return &PerformOidcFrontOrBackChannelLogoutFound{}
}

/* PerformOidcFrontOrBackChannelLogoutFound describes a response with status code 302, with default header values.

 Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
typically 201.
*/
type PerformOidcFrontOrBackChannelLogoutFound struct {
}

func (o *PerformOidcFrontOrBackChannelLogoutFound) Error() string {
	return fmt.Sprintf("[GET /oauth2/sessions/logout][%d] performOidcFrontOrBackChannelLogoutFound ", 302)
}

func (o *PerformOidcFrontOrBackChannelLogoutFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
