// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// OAuth2APIError OAuth2 API Error
//
// An API error caused by Ory's OAuth 2.0 APIs.
//
// swagger:model oAuth2ApiError
type OAuth2APIError struct {

	// Name is the error name.
	// Example: The requested resource could not be found
	Error string `json:"error,omitempty"`

	// Debug contains debug information. This is usually not available and has to be enabled.
	// Example: The database adapter was unable to find the element
	ErrorDebug string `json:"error_debug,omitempty"`

	// Description contains further information on the nature of the error.
	// Example: Object with ID 12345 does not exist
	ErrorDescription string `json:"error_description,omitempty"`

	// Code represents the error status code (404, 403, 401, ...).
	// Example: 404
	StatusCode int64 `json:"status_code,omitempty"`
}

// Validate validates this o auth2 Api error
func (m *OAuth2APIError) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this o auth2 Api error based on context it is used
func (m *OAuth2APIError) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OAuth2APIError) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OAuth2APIError) UnmarshalBinary(b []byte) error {
	var res OAuth2APIError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
